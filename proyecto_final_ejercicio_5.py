# -*- coding: utf-8 -*-
"""Proyecto Final: Ejercicio 5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1had3p4x4LSF_IMXkfVid9y4rv8pXzB3a
"""

import matplotlib.pyplot as plt
import random as r

# Size es la mitad de la longitud del lado de la parcela
size = 50
pos_i = (0,0)

# Definimos la función generadora de la parcela
def my_simulation(p, t_max):
  t = 0
  lat_states = {}
  for i in range(-size, size+1):
    for j in range(-size, size+1):
      lat_states[(i,j)] = "U"
  lat_states[pos_i] = "F"
  lat_states_before = dict(lat_states)

  # Simulamos el incendio
  while t < t_max:
    for i in range(-size, size+1):
      for j in range(-size, size+1):
        if lat_states_before[(i,j)] == "F":
          if i != -size:
            if lat_states_before[(i-1,j)] == "U":
              if r.random() <= p:
                lat_states[(i-1,j)] = "F"
          if i != size:
            if lat_states_before[(i+1,j)] == "U":
              if r.random() <= p:
                lat_states[(i+1,j)] = "F"
          if j != -size:
            if lat_states_before[(i,j-1)] == "U":
              if r.random() <= p:
                lat_states[(i,j-1)] = "F"
          if j != size:
            if lat_states_before[(i,j+1)] == "U":
              if r.random() <= p:
                lat_states[(i,j+1)] = "F"
          lat_states[(i,j)] = "B"
    lat_states_before = dict(lat_states)
    t += 1
  # Esta función retorna un diccionario con las posiciones y estados de cada arbol de la parcela
  return lat_states

# Invocamos la función generadora de la parcela
lat_states = my_simulation(p=1, t_max=40)
x_U = []
y_U = []
x_F = []
y_F = []
x_B = []
y_B = []

# Clasificamos cada árbol
for i in range(-size,size+1):
  for j in range(-size,size+1):
      if lat_states[(i,j)] == "U":
        x_U.append(i)
        y_U.append(j)
      elif lat_states[(i,j)] == "F":
        x_F.append(i)
        y_F.append(j)
      else:
        x_B.append(i)
        y_B.append(j)

# Generamos la imagen de la parcela
plt.figure(figsize=(8.52,8.57))
plt.title("Simulación de Incendio - Estado Inicial")
plt.plot(x_U, y_U, "g.")
plt.plot(x_F, y_F, "r.")
plt.plot(x_B, y_B, "k.")
plt.plot(pos_i[0], pos_i[1], "yo")
# plt.savefig("fig_xxxxx.png")
plt.show()

plt.figure(figsize=(32.65,32.86))
plt.tight_layout()

for k in range(1,17):
  lat_states = my_simulation(p=0.6, t_max=40)
  x_U = []
  y_U = []
  x_F = []
  y_F = []
  x_B = []
  y_B = []

  for i in range(-size, size+1):
    for j in range(-size, size+1):
      if lat_states[(i,j)] == "U":
        x_U.append(i)
        y_U.append(j)
      elif lat_states[(i,j)] == "F":
        x_F.append(i)
        y_F.append(j)
      else:
        x_B.append(i)
        y_B.append(j)

  plt.subplot(4,4,k)
  plt.plot(x_U, y_U, "g.")
  plt.plot(x_F, y_F, "r.")
  plt.plot(x_B, y_B, "k.")
  plt.plot(pos_i[0], pos_i[1], "yo")

# plt.savefig("anexo_11.png")
plt.show()